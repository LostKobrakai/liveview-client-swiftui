{
  "abstract" : [
    {
      "text" : "A property wrapper that handles sending events to the server, with automatic debounce and throttle handling.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative"
      ],
      [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturesModifiers",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14LiveViewNative5EventV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Event"
      }
    ],
    "modules" : [
      {
        "name" : "LiveViewNative"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Event"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "Event"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@propertyWrapper"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Event"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Specify the attribute that contains the event name and an event type to create the wrapper.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Then, call the wrapped value with a payload and optionally a completion handler.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct MyCounterElement: View {",
            "    @Event(\"on-increment\", type: \"click\") private var increment",
            "",
            "    var body: some View {",
            "        MyCounterView(onIncrement: {",
            "            increment([\"new-value\": 10])",
            "        })",
            "    }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The element should include an attribute with the name of the event to trigger.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "<MyCounter on-increment=\"increment_count\" \/>"
          ],
          "syntax" : "html",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Any ",
              "type" : "text"
            },
            {
              "code" : "phx-debounce",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "phx-throttle",
              "type" : "codeVoice"
            },
            {
              "text" : " attributes on this element will be respected automatically.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "references" : {
    "doc:\/\/LiveViewNative\/7SwiftUI15DynamicPropertyP" : {
      "identifier" : "doc:\/\/LiveViewNative\/7SwiftUI15DynamicPropertyP",
      "title" : "SwiftUI.DynamicProperty",
      "type" : "unresolvable"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative" : {
      "abstract" : [
        {
          "text" : "Use Phoenix LiveView to build native iOS apps with SwiftUI.",
          "type" : "text"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative",
      "kind" : "symbol",
      "role" : "collection",
      "title" : "LiveViewNative",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Attribute" : {
      "abstract" : [
        {
          "text" : "A property wrapper that decodes an attribute of an element.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Attribute"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Attribute",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "Attribute"
        }
      ],
      "role" : "symbol",
      "title" : "Attribute",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/attribute"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/ElementNode" : {
      "abstract" : [
        {
          "text" : "A wrapper for an element-containing DOM node and its associated data.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "ElementNode"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/ElementNode",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "ElementNode"
        }
      ],
      "role" : "symbol",
      "title" : "ElementNode",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/elementnode"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event" : {
      "abstract" : [
        {
          "text" : "A property wrapper that handles sending events to the server, with automatic debounce and throttle handling.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Event"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "Event"
        }
      ],
      "role" : "symbol",
      "title" : "Event",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/debounce" : {
      "abstract" : [
        {
          "text" : "A duration in milliseconds for the debounce interval.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "let"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "debounce"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:Sd",
          "text" : "Double"
        },
        {
          "kind" : "text",
          "text" : "?"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/debounce",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "debounce",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/debounce"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/event" : {
      "abstract" : [
        {
          "text" : "The name of the event to send.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "let"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "event"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:SS",
          "text" : "String"
        },
        {
          "kind" : "text",
          "text" : "?"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/event",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "event",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/event"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/EventHandler" : {
      "abstract" : [
        {
          "text" : "An action that you invoke to send an event to the server.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "EventHandler"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/EventHandler",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "EventHandler"
        }
      ],
      "role" : "symbol",
      "title" : "Event.EventHandler",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/eventhandler"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(_:type:)" : {
      "abstract" : [
        {
          "text" : "Retrieves the event name from a specific attribute.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "identifier",
          "text" : "init"
        },
        {
          "kind" : "text",
          "text" : "("
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:18LiveViewNativeCore13AttributeNameV",
          "text" : "AttributeName"
        },
        {
          "kind" : "text",
          "text" : ", "
        },
        {
          "kind" : "externalParam",
          "text" : "type"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:SS",
          "text" : "String"
        },
        {
          "kind" : "text",
          "text" : ")"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(_:type:)",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "init(_:type:)",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/init(_:type:)"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(event:type:)" : {
      "abstract" : [
        {
          "text" : "Creates a binding to a known server-side event name.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "identifier",
          "text" : "init"
        },
        {
          "kind" : "text",
          "text" : "("
        },
        {
          "kind" : "externalParam",
          "text" : "event"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:SS",
          "text" : "String"
        },
        {
          "kind" : "text",
          "text" : ", "
        },
        {
          "kind" : "externalParam",
          "text" : "type"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:SS",
          "text" : "String"
        },
        {
          "kind" : "text",
          "text" : ")"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(event:type:)",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "init(event:type:)",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/init(event:type:)"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(from:)" : {
      "abstract" : [
        {
          "text" : "Create an event reference as an argument to a modifier.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "identifier",
          "text" : "init"
        },
        {
          "kind" : "text",
          "text" : "("
        },
        {
          "kind" : "externalParam",
          "text" : "from"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:s7DecoderP",
          "text" : "Decoder"
        },
        {
          "kind" : "text",
          "text" : ") "
        },
        {
          "kind" : "keyword",
          "text" : "throws"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(from:)",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "init(from:)",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/init(from:)"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/params" : {
      "abstract" : [
        {
          "text" : "Custom values to send with the event.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "let"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "params"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "keyword",
          "text" : "Any"
        },
        {
          "kind" : "text",
          "text" : "?"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/params",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "params",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/params"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/projectedValue" : {
      "abstract" : [
        {
          "text" : "A closure that triggers the event without any additional payload or waiting for completion.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "var"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "projectedValue"
        },
        {
          "kind" : "text",
          "text" : ": () -> "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:s4Voida",
          "text" : "Void"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/projectedValue",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "projectedValue",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/projectedvalue"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/target" : {
      "abstract" : [
        {
          "text" : "The target ",
          "type" : "text"
        },
        {
          "code" : "LiveView",
          "type" : "codeVoice"
        },
        {
          "text" : " or ",
          "type" : "text"
        },
        {
          "code" : "LiveComponent",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "let"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "target"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:Si",
          "text" : "Int"
        },
        {
          "kind" : "text",
          "text" : "?"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/target",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "target",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/target"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/throttle" : {
      "abstract" : [
        {
          "text" : "A duration in milliseconds for the throttle interval.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "let"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "throttle"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:Sd",
          "text" : "Double"
        },
        {
          "kind" : "text",
          "text" : "?"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/throttle",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "throttle",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/throttle"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/type" : {
      "abstract" : [
        {
          "text" : "The type of event, such as ",
          "type" : "text"
        },
        {
          "code" : "click",
          "type" : "codeVoice"
        },
        {
          "text" : " or ",
          "type" : "text"
        },
        {
          "code" : "focus",
          "type" : "codeVoice"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "let"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "type"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:SS",
          "text" : "String"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/type",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "type",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/type"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/update()" : {
      "abstract" : [

      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "func"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "update"
        },
        {
          "kind" : "text",
          "text" : "()"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/update()",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "update()",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/update()"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/wrappedValue" : {
      "abstract" : [
        {
          "text" : "Sends the event with a given payload and completion handler.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "var"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "wrappedValue"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:14LiveViewNative5EventV0D7HandlerV",
          "text" : "EventHandler"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/wrappedValue",
      "kind" : "symbol",
      "role" : "symbol",
      "title" : "wrappedValue",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event\/wrappedvalue"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier" : {
      "abstract" : [
        {
          "text" : "Sends an event when a gesture is performed on the element.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "GestureModifier"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "GestureModifier"
        }
      ],
      "role" : "symbol",
      "title" : "gesture",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/gesturemodifier"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturesModifiers" : {
      "abstract" : [

      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturesModifiers",
      "kind" : "article",
      "role" : "collectionGroup",
      "title" : "Gestures Modifiers",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/gesturesmodifiers"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveBinding" : {
      "abstract" : [
        {
          "text" : "Live bindings provide a mechanism for sharing state between the server and client in a way that can be updated by either.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "LiveBinding"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveBinding",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "LiveBinding"
        }
      ],
      "role" : "symbol",
      "title" : "LiveBinding",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/livebinding"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveContext" : {
      "abstract" : [
        {
          "text" : "The context provides additional information to elements within a live view.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "LiveContext"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveContext",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "LiveContext"
        }
      ],
      "role" : "symbol",
      "title" : "LiveContext",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/livecontext"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/ObservedElement" : {
      "abstract" : [
        {
          "text" : "A property wrapper that observes changes to an element in the coordinator’s document.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "ObservedElement"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/ObservedElement",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "ObservedElement"
        }
      ],
      "role" : "symbol",
      "title" : "ObservedElement",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/observedelement"
    },
    "doc:\/\/LiveViewNative\/Se" : {
      "identifier" : "doc:\/\/LiveViewNative\/Se",
      "title" : "Swift.Decodable",
      "type" : "unresolvable"
    }
  },
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/Se",
        "doc:\/\/LiveViewNative\/7SwiftUI15DynamicPropertyP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/ElementNode",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/ObservedElement",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Attribute",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveBinding",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveContext"
      ],
      "title" : "Working with the DOM"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(_:type:)",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(event:type:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/wrappedValue"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/EventHandler"
      ],
      "title" : "Supporting Types"
    },
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/init(from:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/debounce",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/event",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/params",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/projectedValue",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/target",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/throttle",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/type"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event\/update()"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/liveviewnative\/event"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
}