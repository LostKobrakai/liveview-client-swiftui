{
  "abstract": [
    {
      "text": "A custom registry allows clients to include custom view types in the LiveView DOM.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://LiveViewNative/documentation/LiveViewNative"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry"
  },
  "kind": "symbol",
  "metadata": {
    "externalID": "s:14LiveViewNative14CustomRegistryP",
    "fragments": [
      {
        "kind": "keyword",
        "text": "protocol"
      },
      {
        "kind": "text",
        "text": " "
      },
      {
        "kind": "identifier",
        "text": "CustomRegistry"
      }
    ],
    "modules": [
      {
        "name": "LiveViewNative"
      }
    ],
    "navigatorTitle": [
      {
        "kind": "identifier",
        "text": "CustomRegistry"
      }
    ],
    "role": "symbol",
    "roleHeading": "Protocol",
    "symbolKind": "protocol",
    "title": "CustomRegistry"
  },
  "primaryContentSections": [
    {
      "declarations": [
        {
          "languages": [
            "swift"
          ],
          "platforms": [
            "iOS"
          ],
          "tokens": [
            {
              "kind": "keyword",
              "text": "protocol"
            },
            {
              "kind": "text",
              "text": " "
            },
            {
              "kind": "identifier",
              "text": "CustomRegistry"
            }
          ]
        }
      ],
      "kind": "declarations"
    },
    {
      "content": [
        {
          "anchor": "overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "To add a custom element or attribute, define an enum for the type alias for the tag/attribute name and implement the appropriate method. To customize the loading view, implement the ",
              "type": "text"
            },
            {
              "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/loadingView(for:state:)-33lst",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To use your custom registry implementation, provide it as the generic parameter for the ",
              "type": "text"
            },
            {
              "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " you construct:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    @State var coordinator = LiveSessionCoordinator<MyRegistry>(...)",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://LiveViewNative/documentation/LiveViewNative": {
      "abstract": [],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative",
      "kind": "symbol",
      "role": "collection",
      "title": "LiveViewNative",
      "type": "topic",
      "url": "/documentation/liveviewnative"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/AddCustomElement": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " protocol to define how DOM elements are converted to SwiftUI views.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/AddCustomElement",
      "kind": "article",
      "role": "article",
      "title": "Adding Custom Elements",
      "type": "topic",
      "url": "/documentation/liveviewnative/addcustomelement"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/AddCustomModifier": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " protocol to define how custom modifiers in the DOM are handled.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/AddCustomModifier",
      "kind": "article",
      "role": "article",
      "title": "Adding Custom Modifiers",
      "type": "topic",
      "url": "/documentation/liveviewnative/addcustommodifier"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry": {
      "abstract": [
        {
          "text": "A custom registry allows clients to include custom view types in the LiveView DOM.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "role": "symbol",
      "title": "CustomRegistry",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/CustomModifier": {
      "abstract": [
        {
          "text": "The type of view modifier this registry returns from the ",
          "type": "text"
        },
        {
          "code": "decodeModifiers",
          "type": "codeVoice"
        },
        {
          "text": " method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomModifier"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI12ViewModifierP",
          "text": "ViewModifier"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI13EmptyModifierV",
          "text": "EmptyModifier"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/CustomModifier",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "CustomModifier",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/custommodifier"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/CustomView": {
      "abstract": [
        {
          "text": "The type of view this registry returns from the ",
          "type": "text"
        },
        {
          "code": "lookup",
          "type": "codeVoice"
        },
        {
          "text": " method.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomView"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/CustomView",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "CustomView",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/customview"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/LoadingView": {
      "abstract": [
        {
          "text": "The type of view this registry produces for loading views.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LoadingView"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s5NeverO",
          "text": "Never"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/LoadingView",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "LoadingView",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/loadingview"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/ModifierType": {
      "abstract": [
        {
          "text": "A type represnting the custom modifier types that this registry can handle.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ModifierType"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative13EmptyRegistryV",
          "text": "EmptyRegistry"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative13EmptyRegistryV4NoneV",
          "text": "None"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/ModifierType",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "ModifierType",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/modifiertype"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/TagName": {
      "abstract": [
        {
          "text": "A type representing the tag names that this registry type can provide views for.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "associatedtype"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "TagName"
        },
        {
          "kind": "text",
          "text": " : "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SY",
          "text": "RawRepresentable"
        },
        {
          "kind": "text",
          "text": " = "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative13EmptyRegistryV",
          "text": "EmptyRegistry"
        },
        {
          "kind": "text",
          "text": "."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative13EmptyRegistryV4NoneV",
          "text": "None"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/TagName",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "TagName",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/tagname"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/decodeModifier(_:from:context:)-35xcx": {
      "abstract": [
        {
          "text": "This method is called by LiveView Native when it encounters a view modifier your registry has declared support for.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "decodeModifier"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative14CustomRegistryP12ModifierTypeQa",
          "text": "ModifierType"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "from"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:s7DecoderP",
          "text": "Decoder"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "context"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative0A7ContextV",
          "text": "LiveContext"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">) "
        },
        {
          "kind": "keyword",
          "text": "throws"
        },
        {
          "kind": "text",
          "text": " -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative14CustomRegistryP0D8ModifierQa",
          "text": "CustomModifier"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/decodeModifier(_:from:context:)-35xcx",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "decodeModifier(_:from:context:)",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/decodemodifier(_:from:context:)-35xcx"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/loadingView(for:state:)-33lst": {
      "abstract": [
        {
          "text": "This method is called when it needs a view to display while connecting to the live view.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "loadingView"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "externalParam",
          "text": "for"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:10Foundation3URLV",
          "text": "URL"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "state"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative0A18SessionCoordinatorC",
          "text": "LiveSessionCoordinator"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">."
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative0A18SessionCoordinatorC5StateO",
          "text": "State"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative14CustomRegistryP07LoadingB0Qa",
          "text": "LoadingView"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/loadingView(for:state:)-33lst",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "loadingView(for:state:)",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/loadingview(for:state:)-33lst"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/lookup(_:element:context:)-895au": {
      "abstract": [
        {
          "text": "This method is called by LiveView Native when it needs to construct a custom view.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "lookup"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative14CustomRegistryP7TagNameQa",
          "text": "TagName"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "element"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative11ElementNodeV",
          "text": "ElementNode"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "context"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative0A7ContextV",
          "text": "LiveContext"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:14LiveViewNative14CustomRegistryP0dB0Qa",
          "text": "CustomView"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/lookup(_:element:context:)-895au",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "lookup(_:element:context:)",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry/lookup(_:element:context:)-895au"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/EmptyRegistry": {
      "abstract": [
        {
          "text": "The empty registry is the default ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " implementation that does not provide any views or modifiers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "EmptyRegistry"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/EmptyRegistry",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "EmptyRegistry"
        }
      ],
      "role": "symbol",
      "title": "EmptyRegistry",
      "type": "topic",
      "url": "/documentation/liveviewnative/emptyregistry"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveContext": {
      "abstract": [
        {
          "text": "The context provides information at initialization-time to views in a LiveView.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveContext"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveContext",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveContext"
        }
      ],
      "role": "symbol",
      "title": "LiveContext",
      "type": "topic",
      "url": "/documentation/liveviewnative/livecontext"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator": {
      "abstract": [
        {
          "text": "The session coordinator object handles the initial connection, as well as navigation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveSessionCoordinator"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveSessionCoordinator"
        }
      ],
      "role": "symbol",
      "title": "LiveSessionCoordinator",
      "type": "topic",
      "url": "/documentation/liveviewnative/livesessioncoordinator"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/ViewModifierBuilder": {
      "abstract": [
        {
          "text": "A Swift result builder that allows building a single, concrete ",
          "type": "text"
        },
        {
          "code": "ViewModifier",
          "type": "codeVoice"
        },
        {
          "text": " from a set of conditional modifiers.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ViewModifierBuilder"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/ViewModifierBuilder",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ViewModifierBuilder"
        }
      ],
      "role": "symbol",
      "title": "ViewModifierBuilder",
      "type": "topic",
      "url": "/documentation/liveviewnative/viewmodifierbuilder"
    }
  },
  "relationshipsSections": [
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/EmptyRegistry"
      ],
      "kind": "relationships",
      "title": "Conforming Types",
      "type": "conformingTypes"
    }
  ],
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/AddCustomElement",
        "doc://LiveViewNative/documentation/LiveViewNative/AddCustomModifier",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveContext"
      ],
      "title": "Custom DOM Elements and Attributes"
    }
  ],
  "topicSections": [
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/TagName",
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/lookup(_:element:context:)-895au",
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/CustomView"
      ],
      "title": "Custom Tags"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/ModifierType",
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/decodeModifier(_:from:context:)-35xcx",
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/CustomModifier"
      ],
      "title": "Custom View Modifiers"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/loadingView(for:state:)-33lst",
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry/LoadingView"
      ],
      "title": "Customizing the Loading View"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/EmptyRegistry",
        "doc://LiveViewNative/documentation/LiveViewNative/ViewModifierBuilder"
      ],
      "title": "Supporting Types"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/liveviewnative/customregistry"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}