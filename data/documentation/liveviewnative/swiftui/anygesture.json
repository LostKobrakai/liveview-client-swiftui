{
  "abstract" : [
    {
      "text" : "Configuration for the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " modifier.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturesModifiers",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/AnyGesture"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftUI",
    "externalID" : "s:e:s:7SwiftUI10AnyGestureV14LiveViewNativeE10CodingKeysO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "extension"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "preciseIdentifier" : "s:7SwiftUI10AnyGestureV",
        "text" : "AnyGesture"
      }
    ],
    "modules" : [
      {
        "name" : "LiveViewNative"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AnyGesture"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Extended Structure",
    "symbolKind" : "extension",
    "title" : "AnyGesture"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "extension"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:7SwiftUI10AnyGestureV",
              "text" : "AnyGesture"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "In their simplest form, gestures can be created with an atom. More complex gestures can have properties.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            ":tap",
            "{:tap, [count: 2]} # a double tap",
            "{:sequential, [:long_press, {:tap, [count: 2]}]} # a sequence of gestures"
          ],
          "syntax" : "elixir",
          "type" : "codeListing"
        },
        {
          "anchor" : "Gestures",
          "level" : 2,
          "text" : "Gestures",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Gestures with no required arguments can be represented with an atom.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            ":tap"
          ],
          "syntax" : "elixir",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "To pass arguments, use a tuple with a keyword list as the second element.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "{:tap, [count: 2]}"
          ],
          "syntax" : "elixir",
          "type" : "codeListing"
        },
        {
          "anchor" : "tap",
          "level" : 3,
          "text" : ":tap",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Arguments:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "count",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " - The number of taps needed to trigger the event.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/swiftui\/tapgesture",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for more details on this gesture.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "spatialtap",
          "level" : 3,
          "text" : ":spatial_tap",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Arguments:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "count",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " - The number of taps needed to trigger the event.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "coordinate_space",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " - The coordinate space to report the tap location in. See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/CoordinateSpace",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : " for a list of possible values.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/swiftui\/spatialtapgesture",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for more details on this gesture.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "longpress",
          "level" : 3,
          "text" : ":long_press",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Arguments:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "minimum_duration",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " - The minimum duration the press must be before succeeding.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "maximum_distance",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " - The maximum distance the cursor can move before the gesture fails.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "See ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/developer.apple.com\/documentation\/swiftui\/longpressgesture",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for more details on this gesture.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Sequential-Gestures",
          "level" : 3,
          "text" : "Sequential Gestures",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Gestures can be performed in sequence by passing an array.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "{:sequential, [:long_press, {:spatial_tap, [count: 2]}]}"
          ],
          "syntax" : "elixir",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "In this example, the user must long press then tap again for the event to be sent.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Simultaneous-Gestures",
          "level" : 3,
          "text" : "Simultaneous Gestures",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "All of the gestures passed will be observed at the same time.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "{:simultaneous, [:tap, :spatial_tap]}"
          ],
          "syntax" : "elixir",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "In this example, the ",
              "type" : "text"
            },
            {
              "code" : "tap",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "spatial_tap",
              "type" : "codeVoice"
            },
            {
              "text" : " results will be sent together in an array.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Exclusive-Gestures",
          "level" : 3,
          "text" : "Exclusive Gestures",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "One of the options will be performed, but not both.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The first gesture is given precedence.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "{:exclusive, [:long_press, {:spatial_tap, [count: 2]}]}"
          ],
          "syntax" : "elixir",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "references" : {
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative" : {
      "abstract" : [
        {
          "text" : "Use Phoenix LiveView to build native iOS apps with SwiftUI.",
          "type" : "text"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative",
      "kind" : "symbol",
      "role" : "collection",
      "title" : "LiveViewNative",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event" : {
      "abstract" : [
        {
          "text" : "A property wrapper that handles sending events to the server, with automatic debounce and throttle handling.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Event"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "Event"
        }
      ],
      "role" : "symbol",
      "title" : "Event",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/event"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier" : {
      "abstract" : [
        {
          "text" : "Sends an event when a gesture is performed on the element.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "struct"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "GestureModifier"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "GestureModifier"
        }
      ],
      "role" : "symbol",
      "title" : "gesture",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/gesturemodifier"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturePriority" : {
      "abstract" : [
        {
          "text" : "The priority of a gesture.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "enum"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "GesturePriority"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturePriority",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "GesturePriority"
        }
      ],
      "role" : "symbol",
      "title" : "GesturePriority",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/gesturepriority"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturesModifiers" : {
      "abstract" : [

      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturesModifiers",
      "kind" : "article",
      "role" : "collectionGroup",
      "title" : "Gestures Modifiers",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/gesturesmodifiers"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/AnyGesture" : {
      "abstract" : [
        {
          "text" : "Configuration for the ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : " modifier.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "extension"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "preciseIdentifier" : "s:7SwiftUI10AnyGestureV",
          "text" : "AnyGesture"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/AnyGesture",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "AnyGesture"
        }
      ],
      "role" : "symbol",
      "title" : "AnyGesture",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/swiftui\/anygesture"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/AnyGesture\/Decodable-Implementations" : {
      "abstract" : [

      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/AnyGesture\/Decodable-Implementations",
      "kind" : "article",
      "role" : "collectionGroup",
      "title" : "Decodable Implementations",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/swiftui\/anygesture\/decodable-implementations"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/CoordinateSpace" : {
      "abstract" : [
        {
          "text" : "A named coordinate space for resolving locations.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "extension"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "preciseIdentifier" : "s:7SwiftUI15CoordinateSpaceO",
          "text" : "CoordinateSpace"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/CoordinateSpace",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "CoordinateSpace"
        }
      ],
      "role" : "symbol",
      "title" : "CoordinateSpace",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/swiftui\/coordinatespace"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/GestureMask" : {
      "abstract" : [
        {
          "text" : "Configures how a ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GestureModifier",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : " modifier impacts other gestures on an element.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "extension"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "preciseIdentifier" : "s:7SwiftUI11GestureMaskV",
          "text" : "GestureMask"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/GestureMask",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "GestureMask"
        }
      ],
      "role" : "symbol",
      "title" : "GestureMask",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/swiftui\/gesturemask"
    },
    "doc:\/\/LiveViewNative\/Se" : {
      "identifier" : "doc:\/\/LiveViewNative\/Se",
      "title" : "Swift.Decodable",
      "type" : "unresolvable"
    },
    "https:\/\/developer.apple.com\/documentation\/swiftui\/longpressgesture" : {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/swiftui\/longpressgesture",
      "title" : "SwiftUI.LongPressGesture",
      "titleInlineContent" : [
        {
          "code" : "SwiftUI.LongPressGesture",
          "type" : "codeVoice"
        }
      ],
      "type" : "link",
      "url" : "https:\/\/developer.apple.com\/documentation\/swiftui\/longpressgesture"
    },
    "https:\/\/developer.apple.com\/documentation\/swiftui\/spatialtapgesture" : {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/swiftui\/spatialtapgesture",
      "title" : "SwiftUI.SpatialTapGesture",
      "titleInlineContent" : [
        {
          "code" : "SwiftUI.SpatialTapGesture",
          "type" : "codeVoice"
        }
      ],
      "type" : "link",
      "url" : "https:\/\/developer.apple.com\/documentation\/swiftui\/spatialtapgesture"
    },
    "https:\/\/developer.apple.com\/documentation\/swiftui\/tapgesture" : {
      "identifier" : "https:\/\/developer.apple.com\/documentation\/swiftui\/tapgesture",
      "title" : "SwiftUI.TapGesture",
      "titleInlineContent" : [
        {
          "code" : "SwiftUI.TapGesture",
          "type" : "codeVoice"
        }
      ],
      "type" : "link",
      "url" : "https:\/\/developer.apple.com\/documentation\/swiftui\/tapgesture"
    }
  },
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/Se"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/GesturePriority",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/GestureMask",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Event"
      ],
      "title" : "Supporting Types"
    }
  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/SwiftUI\/AnyGesture\/Decodable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/liveviewnative\/swiftui\/anygesture"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
}