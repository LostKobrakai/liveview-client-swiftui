{
  "abstract" : [
    {
      "text" : "An aggregate registry combines multiple other registries together, allowing you to use tags\/modifiers declared by any of them.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14LiveViewNative17AggregateRegistryP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AggregateRegistry"
      }
    ],
    "modules" : [
      {
        "name" : "LiveViewNative"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AggregateRegistry"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "AggregateRegistry"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "iOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AggregateRegistry"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/RootRegistry",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:14LiveViewNative12RootRegistryP",
              "text" : "RootRegistry"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "To conform to this protocol, provide the ",
              "type" : "text"
            },
            {
              "code" : "Registries",
              "type" : "codeVoice"
            },
            {
              "text" : " typealias, using the ",
              "type" : "text"
            },
            {
              "code" : "Registry2",
              "type" : "codeVoice"
            },
            {
              "text" : "\/",
              "type" : "text"
            },
            {
              "code" : "Registry3",
              "type" : "codeVoice"
            },
            {
              "text" : "\/etc. types:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct AppRegistries: AggregateRegistry {",
            "    typealias Registries = Registry2<",
            "        MyRegistry,",
            "        LiveFormsRegistry<Self>",
            "    >",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "To use your aggregate registry, pass it as the type parameter when you’re constructing the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveSessionCoordinator",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct ContentView: View {",
            "    @State var session = LiveSessionCoordinator<AppRegistries>(url: URL(string: \"...\")!)",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Note that each of the registry types used in the aggregate registry must specify that its root registry type is your aggregate registry.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This is required so that inside of an element provided by one registry, there can also be elements provided by any of the other registries that are aggregated together.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you’re implementing a registry for use within your own app, you can specify the root registry explicitly:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct MyRegistry: CustomRegistry {",
            "    typealias Root = AppRegistries",
            "    \/\/ ...",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Or, if you’re implementing a registry as part of a library that will be used by another app, you can make your registry type generic over the root type:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct LiveFormsRegistry<Root: RootRegistry>: CustomRegistry {",
            "    \/\/ ...",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Loading-Views",
          "level" : 3,
          "text" : "Loading Views",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Whereas tags and modifiers can be composed from multiple registry types without conflict, only one loading view implementation can be used.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The aggregate registry will use the loading view from the first concrete registry type that is provided.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "In the above example, ",
              "type" : "text"
            },
            {
              "code" : "AppRegistries",
              "type" : "codeVoice"
            },
            {
              "text" : " would use ",
              "type" : "text"
            },
            {
              "code" : "MyRegistry",
              "type" : "codeVoice"
            },
            {
              "text" : "’s loading view by default.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you don’t want this behavior, you can override ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry\/loadingView(for:state:)-6jd3b",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " on your aggregate registry and provide another view.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "references" : {
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative" : {
      "abstract" : [
        {
          "text" : "Use Phoenix LiveView to build native iOS apps with SwiftUI.",
          "type" : "text"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative",
      "kind" : "symbol",
      "role" : "collection",
      "title" : "LiveViewNative",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry" : {
      "abstract" : [
        {
          "text" : "An aggregate registry combines multiple other registries together, allowing you to use tags\/modifiers declared by any of them.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "protocol"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "AggregateRegistry"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "AggregateRegistry"
        }
      ],
      "role" : "symbol",
      "title" : "AggregateRegistry",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/aggregateregistry"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry\/CustomRegistry-Implementations" : {
      "abstract" : [

      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry\/CustomRegistry-Implementations",
      "kind" : "article",
      "role" : "collectionGroup",
      "title" : "CustomRegistry Implementations",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/aggregateregistry\/customregistry-implementations"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry\/Registries" : {
      "abstract" : [
        {
          "text" : "The combined registry type.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "associatedtype"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Registries"
        },
        {
          "kind" : "text",
          "text" : " : "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:14LiveViewNative14CustomRegistryP",
          "text" : "CustomRegistry"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry\/Registries",
      "kind" : "symbol",
      "required" : true,
      "role" : "symbol",
      "title" : "Registries",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/aggregateregistry\/registries"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry" : {
      "abstract" : [
        {
          "text" : "A custom registry allows clients to include custom view types in the LiveView DOM.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "protocol"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "CustomRegistry"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "CustomRegistry"
        }
      ],
      "role" : "symbol",
      "title" : "CustomRegistry",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/customregistry"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry\/loadingView(for:state:)-6jd3b" : {
      "abstract" : [
        {
          "text" : "This method is called when it needs a view to display while connecting to the live view.",
          "type" : "text"
        }
      ],
      "defaultImplementations" : 1,
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "static"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "keyword",
          "text" : "func"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "loadingView"
        },
        {
          "kind" : "text",
          "text" : "("
        },
        {
          "kind" : "externalParam",
          "text" : "for"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:10Foundation3URLV",
          "text" : "URL"
        },
        {
          "kind" : "text",
          "text" : ", "
        },
        {
          "kind" : "externalParam",
          "text" : "state"
        },
        {
          "kind" : "text",
          "text" : ": "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:14LiveViewNative0A12SessionStateO",
          "text" : "LiveSessionState"
        },
        {
          "kind" : "text",
          "text" : ") -> "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:14LiveViewNative14CustomRegistryP07LoadingB0Qa",
          "text" : "LoadingView"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry\/loadingView(for:state:)-6jd3b",
      "kind" : "symbol",
      "required" : true,
      "role" : "symbol",
      "title" : "loadingView(for:state:)",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/customregistry\/loadingview(for:state:)-6jd3b"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry\/Root" : {
      "abstract" : [
        {
          "text" : "The root custom registry type that the live view coordinator and context use.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "associatedtype"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Root"
        },
        {
          "kind" : "text",
          "text" : " : "
        },
        {
          "kind" : "typeIdentifier",
          "preciseIdentifier" : "s:14LiveViewNative12RootRegistryP",
          "text" : "RootRegistry"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry\/Root",
      "kind" : "symbol",
      "required" : true,
      "role" : "symbol",
      "title" : "Root",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/customregistry\/root"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveSessionCoordinator" : {
      "abstract" : [
        {
          "text" : "The session coordinator object handles the initial connection, as well as navigation.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "class"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "LiveSessionCoordinator"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveSessionCoordinator",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "LiveSessionCoordinator"
        }
      ],
      "role" : "symbol",
      "title" : "LiveSessionCoordinator",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/livesessioncoordinator"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry2" : {
      "abstract" : [
        {
          "text" : "A registry type that combines 2 registries.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "typealias"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Registry2"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry2",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "Registry2"
        }
      ],
      "role" : "symbol",
      "title" : "Registry2",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/registry2"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry3" : {
      "abstract" : [
        {
          "text" : "A registry type that combines 3 registries.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "typealias"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Registry3"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry3",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "Registry3"
        }
      ],
      "role" : "symbol",
      "title" : "Registry3",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/registry3"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry4" : {
      "abstract" : [
        {
          "text" : "A registry type that combines 4 registries.",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "typealias"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "Registry4"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry4",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "Registry4"
        }
      ],
      "role" : "symbol",
      "title" : "Registry4",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/registry4"
    },
    "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/RootRegistry" : {
      "abstract" : [
        {
          "text" : "A root registry is a ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : " type that can be used directly as the registry for a ",
          "type" : "text"
        },
        {
          "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/LiveSessionCoordinator",
          "isActive" : true,
          "type" : "reference"
        },
        {
          "text" : ".",
          "type" : "text"
        }
      ],
      "fragments" : [
        {
          "kind" : "keyword",
          "text" : "protocol"
        },
        {
          "kind" : "text",
          "text" : " "
        },
        {
          "kind" : "identifier",
          "text" : "RootRegistry"
        }
      ],
      "identifier" : "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/RootRegistry",
      "kind" : "symbol",
      "navigatorTitle" : [
        {
          "kind" : "identifier",
          "text" : "RootRegistry"
        }
      ],
      "role" : "symbol",
      "title" : "RootRegistry",
      "type" : "topic",
      "url" : "\/documentation\/liveviewnative\/rootregistry"
    }
  },
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/RootRegistry"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/RootRegistry",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/CustomRegistry\/Root"
      ],
      "title" : "Composing Registries"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry\/Registries"
      ],
      "title" : "Protocol Requirements"
    },
    {
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry2",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry3",
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/Registry4"
      ],
      "title" : "Multi-Registry Types"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/LiveViewNative\/documentation\/LiveViewNative\/AggregateRegistry\/CustomRegistry-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/liveviewnative\/aggregateregistry"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
}