{
  "hierarchy": {
    "paths": [
      []
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://LiveViewNative/documentation/LiveViewNative"
  },
  "kind": "symbol",
  "metadata": {
    "externalID": "LiveViewNative",
    "modules": [
      {
        "name": "LiveViewNative"
      }
    ],
    "role": "collection",
    "roleHeading": "Framework",
    "symbolKind": "module",
    "title": "LiveViewNative"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://LiveViewNative/documentation/LiveViewNative": {
      "abstract": [],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative",
      "kind": "symbol",
      "role": "collection",
      "title": "LiveViewNative",
      "type": "topic",
      "url": "/documentation/liveviewnative"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/AddCustomElement": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/RootRegistry",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " protocol to define how DOM elements are converted to SwiftUI views.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/AddCustomElement",
      "kind": "article",
      "role": "article",
      "title": "Adding Custom Elements",
      "type": "topic",
      "url": "/documentation/liveviewnative/addcustomelement"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/AddCustomModifier": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/RootRegistry",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " protocol to define how custom modifiers in the DOM are handled.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/AddCustomModifier",
      "kind": "article",
      "role": "article",
      "title": "Adding Custom Modifiers",
      "type": "topic",
      "url": "/documentation/liveviewnative/addcustommodifier"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/Attribute": {
      "abstract": [
        {
          "text": "A property wrapper that decodes an attribute of an element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Attribute"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/Attribute",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Attribute"
        }
      ],
      "role": "symbol",
      "title": "Attribute",
      "type": "topic",
      "url": "/documentation/liveviewnative/attribute"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/AttributeDecodable": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AttributeDecodable"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/AttributeDecodable",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AttributeDecodable"
        }
      ],
      "role": "symbol",
      "title": "AttributeDecodable",
      "type": "topic",
      "url": "/documentation/liveviewnative/attributedecodable"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/AttributeDecodingError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "AttributeDecodingError"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/AttributeDecodingError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "AttributeDecodingError"
        }
      ],
      "role": "symbol",
      "title": "AttributeDecodingError",
      "type": "topic",
      "url": "/documentation/liveviewnative/attributedecodingerror"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/AttributesVsModifiers": {
      "abstract": [],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/AttributesVsModifiers",
      "kind": "article",
      "role": "article",
      "title": "Attributes vs. Modifiers",
      "type": "topic",
      "url": "/documentation/liveviewnative/attributesvsmodifiers"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry": {
      "abstract": [
        {
          "text": "A custom registry allows clients to include custom view types in the LiveView DOM.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "role": "symbol",
      "title": "CustomRegistry",
      "type": "topic",
      "url": "/documentation/liveviewnative/customregistry"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/ElementNode": {
      "abstract": [
        {
          "text": "A wrapper for an element-containing DOM node and its associated data.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ElementNode"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/ElementNode",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ElementNode"
        }
      ],
      "role": "symbol",
      "title": "ElementNode",
      "type": "topic",
      "url": "/documentation/liveviewnative/elementnode"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/Event": {
      "abstract": [
        {
          "text": "A property wrapper that handles sending events to the server, with automatic debounce and throttle handling.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Event"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/Event",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Event"
        }
      ],
      "role": "symbol",
      "title": "Event",
      "type": "topic",
      "url": "/documentation/liveviewnative/event"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/FormControls": {
      "abstract": [
        {
          "text": "See how to build custom form controls that integrate with the form data model and events.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/FormControls",
      "kind": "article",
      "role": "article",
      "title": "Building Form Controls",
      "type": "topic",
      "url": "/documentation/liveviewnative/formcontrols"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/FormModel": {
      "abstract": [
        {
          "text": "A form model stores the working copy of the data for a specific ",
          "type": "text"
        },
        {
          "code": "<form>",
          "type": "codeVoice"
        },
        {
          "text": " element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FormModel"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/FormModel",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FormModel"
        }
      ],
      "role": "symbol",
      "title": "FormModel",
      "type": "topic",
      "url": "/documentation/liveviewnative/formmodel"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/FormState": {
      "abstract": [
        {
          "text": "A property wrapper that stores the primary value of a form element.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FormState"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/FormState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FormState"
        }
      ],
      "role": "symbol",
      "title": "FormState",
      "type": "topic",
      "url": "/documentation/liveviewnative/formstate"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/FormValue": {
      "abstract": [
        {
          "text": "A form value is any type that can be stored in a ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/FormModel",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " and used with ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/FormState",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "FormValue"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/FormValue",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "FormValue"
        }
      ],
      "role": "symbol",
      "title": "FormValue",
      "type": "topic",
      "url": "/documentation/liveviewnative/formvalue"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/GettingStarted": {
      "abstract": [
        {
          "text": "See how to quickly get up and running displaying a LiveView in your app.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/GettingStarted",
      "kind": "article",
      "role": "article",
      "title": "Getting Started",
      "type": "topic",
      "url": "/documentation/liveviewnative/gettingstarted"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveBinding": {
      "abstract": [
        {
          "text": "Live bindings provide a mechanism for sharing state between the server and client in a way that can be updated by either.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveBinding"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveBinding",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveBinding"
        }
      ],
      "role": "symbol",
      "title": "LiveBinding",
      "type": "topic",
      "url": "/documentation/liveviewnative/livebinding"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveConnectionError": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveConnectionError"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveConnectionError",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveConnectionError"
        }
      ],
      "role": "symbol",
      "title": "LiveConnectionError",
      "type": "topic",
      "url": "/documentation/liveviewnative/liveconnectionerror"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveContext": {
      "abstract": [
        {
          "text": "The context provides information at initialization-time to views in a LiveView.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveContext"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveContext",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveContext"
        }
      ],
      "role": "symbol",
      "title": "LiveContext",
      "type": "topic",
      "url": "/documentation/liveviewnative/livecontext"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionConfiguration": {
      "abstract": [
        {
          "text": "An object that configures the behavior of a ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveSessionConfiguration"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionConfiguration",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveSessionConfiguration"
        }
      ],
      "role": "symbol",
      "title": "LiveSessionConfiguration",
      "type": "topic",
      "url": "/documentation/liveviewnative/livesessionconfiguration"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator": {
      "abstract": [
        {
          "text": "The session coordinator object handles the initial connection, as well as navigation.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveSessionCoordinator"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveSessionCoordinator"
        }
      ],
      "role": "symbol",
      "title": "LiveSessionCoordinator",
      "type": "topic",
      "url": "/documentation/liveviewnative/livesessioncoordinator"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionState": {
      "abstract": [
        {
          "text": "The live view connection state.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "enum"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveSessionState"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionState",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveSessionState"
        }
      ],
      "role": "symbol",
      "title": "LiveSessionState",
      "type": "topic",
      "url": "/documentation/liveviewnative/livesessionstate"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveView": {
      "abstract": [
        {
          "text": "The SwiftUI root view for a Phoenix LiveView.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveView"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveView"
        }
      ],
      "role": "symbol",
      "title": "LiveView",
      "type": "topic",
      "url": "/documentation/liveviewnative/liveview"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/LiveViewCoordinator": {
      "abstract": [
        {
          "text": "The live view coordinator manages the connection to a particular LiveView on the backend.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveViewCoordinator"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveViewCoordinator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveViewCoordinator"
        }
      ],
      "role": "symbol",
      "title": "LiveViewCoordinator",
      "type": "topic",
      "url": "/documentation/liveviewnative/liveviewcoordinator"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/ObservedElement": {
      "abstract": [
        {
          "text": "A property wrapper that observes changes to an element in the coordinator’s document.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "ObservedElement"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/ObservedElement",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "ObservedElement"
        }
      ],
      "role": "symbol",
      "title": "ObservedElement",
      "type": "topic",
      "url": "/documentation/liveviewnative/observedelement"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/Payload": {
      "abstract": [],
      "fragments": [
        {
          "kind": "keyword",
          "text": "typealias"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "Payload"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/Payload",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "Payload"
        }
      ],
      "role": "symbol",
      "title": "Payload",
      "type": "topic",
      "url": "/documentation/liveviewnative/payload"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/RootRegistry": {
      "abstract": [
        {
          "text": "A root registry is a ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " type that can be used directly as the registry for a ",
          "type": "text"
        },
        {
          "identifier": "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "RootRegistry"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/RootRegistry",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "RootRegistry"
        }
      ],
      "role": "symbol",
      "title": "RootRegistry",
      "type": "topic",
      "url": "/documentation/liveviewnative/rootregistry"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/SupportedElements": {
      "abstract": [
        {
          "text": "LiveViewNative supports DOM elements similar to but distinct from their Web counterparts.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/SupportedElements",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Supported Elements",
      "type": "topic",
      "url": "/documentation/liveviewnative/supportedelements"
    },
    "doc://LiveViewNative/documentation/LiveViewNative/SupportedModifiers": {
      "abstract": [
        {
          "text": "Common modifiers supported by all DOM elements.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/documentation/LiveViewNative/SupportedModifiers",
      "kind": "article",
      "role": "article",
      "title": "Supported Modifiers",
      "type": "topic",
      "url": "/documentation/liveviewnative/supportedmodifiers"
    },
    "doc://LiveViewNative/tutorials/YourFirstApp": {
      "abstract": [
        {
          "text": "A step-by-step guide to building your first app with LiveViewNative. Learn how to display data, handle navigation, build interactions, and more.",
          "type": "text"
        }
      ],
      "identifier": "doc://LiveViewNative/tutorials/YourFirstApp",
      "kind": "overview",
      "role": "overview",
      "title": "Your First LiveViewNative App",
      "type": "topic",
      "url": "/tutorials/yourfirstapp"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "topicSections": [
    {
      "identifiers": [
        "doc://LiveViewNative/tutorials/YourFirstApp",
        "doc://LiveViewNative/documentation/LiveViewNative/GettingStarted",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveView",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionCoordinator",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionConfiguration",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveViewCoordinator"
      ],
      "title": "Essentials"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/SupportedElements",
        "doc://LiveViewNative/documentation/LiveViewNative/AttributesVsModifiers",
        "doc://LiveViewNative/documentation/LiveViewNative/SupportedModifiers"
      ],
      "title": "Building a Live View Template"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/ElementNode",
        "doc://LiveViewNative/documentation/LiveViewNative/ObservedElement",
        "doc://LiveViewNative/documentation/LiveViewNative/Attribute"
      ],
      "title": "Working with the DOM"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/AddCustomElement",
        "doc://LiveViewNative/documentation/LiveViewNative/AddCustomModifier",
        "doc://LiveViewNative/documentation/LiveViewNative/CustomRegistry",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveContext"
      ],
      "title": "Custom DOM Elements and Attributes"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/FormControls",
        "doc://LiveViewNative/documentation/LiveViewNative/FormState",
        "doc://LiveViewNative/documentation/LiveViewNative/FormValue",
        "doc://LiveViewNative/documentation/LiveViewNative/FormModel"
      ],
      "title": "Form Controls"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/AttributeDecodable"
      ],
      "title": "Protocols"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/Event",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveBinding"
      ],
      "title": "Structures"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/Payload"
      ],
      "title": "Type Aliases"
    },
    {
      "identifiers": [
        "doc://LiveViewNative/documentation/LiveViewNative/AttributeDecodingError",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveConnectionError",
        "doc://LiveViewNative/documentation/LiveViewNative/LiveSessionState"
      ],
      "title": "Enumerations"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/liveviewnative"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}