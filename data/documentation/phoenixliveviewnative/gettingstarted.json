{
  "abstract": [
    {
      "text": "See how to quickly get up and running displaying a LiveView in your app.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/GettingStarted"
  },
  "kind": "article",
  "metadata": {
    "modules": [
      {
        "name": "PhoenixLiveViewNative"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Getting Started"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "First-Steps",
          "level": 2,
          "text": "First Steps",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "Getting started with LiveViewNative is easy: simply create a ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " and pass it into a ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveView",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " that’s part of your view tree.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The coordinator object is responsible for connecting to the Phoenix LiveView backend, managing the network connection, and sending and responding to events.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "Only one coordinator may be used for a view, so use ",
              "type": "text"
            },
            {
              "code": "@State",
              "type": "codeVoice"
            },
            {
              "text": " to store it on the containing view.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The only information you are required to provide is the URL of the live view to connect to.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "The LiveView is then created by passing in the coordinator, no other setup necessary.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    @State private var coordinator = LiveViewCoordinator(URL(string: \"http://localhost:4000/\")!)",
            "",
            "    var body: some View {",
            "        LiveView(coordinator: coordinator)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Configuring-the-Coordinator",
          "level": 2,
          "text": "Configuring the Coordinator",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "The coordinator can be configured with a number of different options. To customize these, create a ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewConfiguration",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with the values you want, and then pass it to coordinator’s initializer.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    @State private var coordinator: LiveViewCoordinator<EmptyRegistry> = {",
            "        var config = LiveViewConfiguration()",
            "        config.navigationMode = .enabled",
            "        return LiveViewCoordinator(URL(string: \"http://localhost:4000/\")!, config: config)",
            "    }()",
            "",
            "    var body: some View {",
            "        LiveView(coordinator: coordinator)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "anchor": "Supporting-Custom-Elements",
          "level": 2,
          "text": "Supporting Custom Elements",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "You can enable support for your own custom HTML elements and attributes by implementing the ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol and providing it to the coordinator. The protocol uses only static methods, so rather than constructing an instance of your registry, you provide it as a generic type to the coordinator when constructing it:",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct ContentView: View {",
            "    @State private var coordinator = LiveViewCoordinator<MyCustomRegistry>(URL(string: \"http://localhost:4000/\")!)",
            "",
            "    var body: some View {",
            "        LiveView(coordinator: coordinator)",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative": {
      "abstract": [],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative",
      "kind": "symbol",
      "role": "collection",
      "title": "PhoenixLiveViewNative",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry": {
      "abstract": [
        {
          "text": "A custom registry allows clients to include custom view types in the LiveView DOM.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "role": "symbol",
      "title": "CustomRegistry",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/customregistry"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveView": {
      "abstract": [
        {
          "text": "The SwiftUI root view for a Phoenix LiveView.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveView"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveView",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveView"
        }
      ],
      "role": "symbol",
      "title": "LiveView",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/liveview"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewConfiguration": {
      "abstract": [
        {
          "text": "An object that configures the behavior of a ",
          "type": "text"
        },
        {
          "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": ".",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveViewConfiguration"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewConfiguration",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveViewConfiguration"
        }
      ],
      "role": "symbol",
      "title": "LiveViewConfiguration",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/liveviewconfiguration"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator": {
      "abstract": [
        {
          "text": "The live view coordinator object handles connecting to Phoenix LiveView on the backend, managing the websocket connection, and transmitting/handling events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveViewCoordinator"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveViewCoordinator"
        }
      ],
      "role": "symbol",
      "title": "LiveViewCoordinator",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/liveviewcoordinator"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/SupportedAttributes": {
      "abstract": [
        {
          "text": "Common attributes supported by all DOM elements.",
          "type": "text"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/SupportedAttributes",
      "kind": "article",
      "role": "article",
      "title": "Supported Attributes",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/supportedattributes"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/SupportedElements": {
      "abstract": [
        {
          "text": "LiveViewNative supports DOM elements similar to but distinct from their Web counterparts.",
          "type": "text"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/SupportedElements",
      "kind": "article",
      "role": "collectionGroup",
      "title": "Supported Elements",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/supportedelements"
    },
    "doc://PhoenixLiveViewNative/tutorials/YourFirstApp": {
      "abstract": [
        {
          "text": "A step-by-step guide to building your first app with LiveViewNative. Learn how to display data, handle navigation, build interactions, and more.",
          "type": "text"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/tutorials/YourFirstApp",
      "kind": "overview",
      "role": "overview",
      "title": "Your First LiveViewNative App",
      "type": "topic",
      "url": "/tutorials/yourfirstapp"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://PhoenixLiveViewNative/tutorials/YourFirstApp",
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveView",
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator",
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewConfiguration",
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/SupportedElements",
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/SupportedAttributes"
      ],
      "title": "Essentials"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/phoenixliveviewnative/gettingstarted"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}