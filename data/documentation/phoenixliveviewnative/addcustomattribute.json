{
  "abstract": [
    {
      "text": "Use the ",
      "type": "text"
    },
    {
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry",
      "isActive": true,
      "type": "reference"
    },
    {
      "text": " protocol to define how custom attributes in the DOM are handled.",
      "type": "text"
    }
  ],
  "hierarchy": {
    "paths": [
      [
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative"
      ]
    ]
  },
  "identifier": {
    "interfaceLanguage": "swift",
    "url": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/AddCustomAttribute"
  },
  "kind": "article",
  "metadata": {
    "modules": [
      {
        "name": "PhoenixLiveViewNative"
      }
    ],
    "role": "article",
    "roleHeading": "Article",
    "title": "Adding Custom Attributes"
  },
  "primaryContentSections": [
    {
      "content": [
        {
          "anchor": "Overview",
          "level": 2,
          "text": "Overview",
          "type": "heading"
        },
        {
          "inlineContent": [
            {
              "text": "If you don’t already have one, create a type that conforms to the ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " protocol and provide it as the eneric type paramter to your ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": ".",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct MyRegistry: CustomRegistry {",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Then, add an enum called ",
              "type": "text"
            },
            {
              "code": "AttributeName",
              "type": "codeVoice"
            },
            {
              "text": " that has strings for raw values and conforms to ",
              "type": "text"
            },
            {
              "code": "Equatable",
              "type": "codeVoice"
            },
            {
              "text": ". The framework will use this type to check if your registry supports a particular attribute name. All of the string values should be lowercase, otherwise the framework will not use them.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct MyRegistry: CustomRegistry {",
            "    enum AttributeName: String, Equatable {",
            "        case myAttr = \"my-attr\"",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "To define for this attributes, implement the ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry/applyCustomAttribute(_:value:element:context:)-4fh1q",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " method. Your implementation of this method is automatically a SwiftUI ",
              "type": "text"
            },
            {
              "code": "ViewBuilder",
              "type": "codeVoice"
            },
            {
              "text": ", so simply construct the view you want to use rather than returning it.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "To get the base view that is being modified, call ",
              "type": "text"
            },
            {
              "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveContext/buildElement(_:)",
              "isActive": true,
              "type": "reference"
            },
            {
              "text": " with the provided element.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "inlineContent": [
            {
              "text": "In the following example, an attribute like ",
              "type": "text"
            },
            {
              "code": "my-font=\"22\"",
              "type": "codeVoice"
            },
            {
              "text": " could be used to apply the custom font named “My Font” with a fixed size of 22pt.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        },
        {
          "code": [
            "struct MyRegistry: CustomRegistry {",
            "    enum AttributeName: String, Equatable {",
            "        case myFont = \"myFont\"",
            "    }",
            "",
            "    static func applyCustomAttribute(_ name: AttributeName, value: String, element: Element, context: LiveContext<MyRegistry>) -> some View {",
            "        switch name {",
            "        case .myFont:",
            "            context.buildElement(element)",
            "                .font(.custom(\"My Font\", fixedSize: Double(value) ?? 13))",
            "        }",
            "    }",
            "}"
          ],
          "syntax": "swift",
          "type": "codeListing"
        },
        {
          "inlineContent": [
            {
              "text": "Because an enum is used for the attribute name, do not include a ",
              "type": "text"
            },
            {
              "code": "default",
              "type": "codeVoice"
            },
            {
              "text": " b ranch in your ",
              "type": "text"
            },
            {
              "code": "switch",
              "type": "codeVoice"
            },
            {
              "text": " statement so that Swift will check if for exhaustiveness.",
              "type": "text"
            }
          ],
          "type": "paragraph"
        }
      ],
      "kind": "content"
    }
  ],
  "references": {
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative": {
      "abstract": [],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative",
      "kind": "symbol",
      "role": "collection",
      "title": "PhoenixLiveViewNative",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/AddCustomElement": {
      "abstract": [
        {
          "text": "Use the ",
          "type": "text"
        },
        {
          "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry",
          "isActive": true,
          "type": "reference"
        },
        {
          "text": " protocol to define how DOM elements are converted to SwiftUI views.",
          "type": "text"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/AddCustomElement",
      "kind": "article",
      "role": "article",
      "title": "Adding Custom Elements",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/addcustomelement"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry": {
      "abstract": [
        {
          "text": "A custom registry allows clients to include custom view types in the LiveView DOM.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "protocol"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "CustomRegistry"
        }
      ],
      "role": "symbol",
      "title": "CustomRegistry",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/customregistry"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry/applyCustomAttribute(_:value:element:context:)-4fh1q": {
      "abstract": [
        {
          "text": "This method is called by LiveView Native when it encounters a custom attribute your registry has declared support for.",
          "type": "text"
        }
      ],
      "defaultImplementations": 1,
      "fragments": [
        {
          "kind": "keyword",
          "text": "static"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "applyCustomAttribute"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:21PhoenixLiveViewNative14CustomRegistryP13AttributeNameQa",
          "text": "AttributeName"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "value"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:SS",
          "text": "String"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "element"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:21PhoenixLiveViewNative7Elementa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ", "
        },
        {
          "kind": "externalParam",
          "text": "context"
        },
        {
          "kind": "text",
          "text": ": "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:21PhoenixLiveViewNative0B7ContextV",
          "text": "LiveContext"
        },
        {
          "kind": "text",
          "text": "<"
        },
        {
          "kind": "typeIdentifier",
          "text": "Self"
        },
        {
          "kind": "text",
          "text": ">) -> "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:21PhoenixLiveViewNative14CustomRegistryP8ModifiedQa",
          "text": "Modified"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry/applyCustomAttribute(_:value:element:context:)-4fh1q",
      "kind": "symbol",
      "required": true,
      "role": "symbol",
      "title": "applyCustomAttribute(_:value:element:context:)",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/customregistry/applycustomattribute(_:value:element:context:)-4fh1q"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveContext": {
      "abstract": [
        {
          "text": "The context provides information at initialization-time to views in a LiveView.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "struct"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveContext"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveContext",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveContext"
        }
      ],
      "role": "symbol",
      "title": "LiveContext",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/livecontext"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveContext/buildElement(_:)": {
      "abstract": [
        {
          "text": "Builds a view representing the given element in the current context.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "func"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "buildElement"
        },
        {
          "kind": "text",
          "text": "("
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:21PhoenixLiveViewNative7Elementa",
          "text": "Element"
        },
        {
          "kind": "text",
          "text": ") -> "
        },
        {
          "kind": "keyword",
          "text": "some"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "typeIdentifier",
          "preciseIdentifier": "s:7SwiftUI4ViewP",
          "text": "View"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveContext/buildElement(_:)",
      "kind": "symbol",
      "role": "symbol",
      "title": "buildElement(_:)",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/livecontext/buildelement(_:)"
    },
    "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator": {
      "abstract": [
        {
          "text": "The live view coordinator object handles connecting to Phoenix LiveView on the backend, managing the websocket connection, and transmitting/handling events.",
          "type": "text"
        }
      ],
      "fragments": [
        {
          "kind": "keyword",
          "text": "class"
        },
        {
          "kind": "text",
          "text": " "
        },
        {
          "kind": "identifier",
          "text": "LiveViewCoordinator"
        }
      ],
      "identifier": "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveViewCoordinator",
      "kind": "symbol",
      "navigatorTitle": [
        {
          "kind": "identifier",
          "text": "LiveViewCoordinator"
        }
      ],
      "role": "symbol",
      "title": "LiveViewCoordinator",
      "type": "topic",
      "url": "/documentation/phoenixliveviewnative/liveviewcoordinator"
    }
  },
  "schemaVersion": {
    "major": 0,
    "minor": 3,
    "patch": 0
  },
  "sections": [],
  "seeAlsoSections": [
    {
      "generated": true,
      "identifiers": [
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/AddCustomElement",
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/CustomRegistry",
        "doc://PhoenixLiveViewNative/documentation/PhoenixLiveViewNative/LiveContext"
      ],
      "title": "Custom DOM Elements and Attributes"
    }
  ],
  "variants": [
    {
      "paths": [
        "/documentation/phoenixliveviewnative/addcustomattribute"
      ],
      "traits": [
        {
          "interfaceLanguage": "swift"
        }
      ]
    }
  ]
}